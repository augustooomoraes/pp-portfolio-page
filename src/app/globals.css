@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* =x=x=x=x=x=x=x=x=x=x=x=x=x=x=x= Colors
=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x */
  --color-white: #ffffff;
  --color-white-rgb: 255, 255, 255;
  --color-grey-050: #fafafa;
  --color-grey-050-rgb: 250, 250, 250;
  --color-grey-100: #f5f5f5;
  --color-grey-100-rgb: 245, 245, 245;
  --color-grey-200: #eeeeee;
  --color-grey-200-rgb: 238, 238, 238;
  --color-grey-300: #e0e0e0;
  --color-grey-300-rgb: 224, 224, 224;
  --color-grey-400: #bdbdbd;
  --color-grey-400-rgb: 189, 189, 189;
  --color-grey-500: #9e9e9e;
  --color-grey-500-rgb: 158, 158, 158;
  --color-grey-600: #757575;
  --color-grey-600-rgb: 117, 117, 117;
  --color-grey-700: #616161;
  --color-grey-700-rgb: 97, 97, 97;
  --color-grey-800: #424242;
  --color-grey-800-rgb: 66, 66, 66;
  --color-grey-900: #212121;
  --color-grey-900-rgb: 33, 33, 33;
  --color-black: #000000;
  --color-black-rgb: 0, 0, 0;

  --color-primary: #072b36;
  --color-primary-rgb: 7, 43, 54;
  --color-secondary: #05526a;
  --color-secondary-rgb: 5, 82, 106;
  --color-terciary: #7ca7c0;
  --color-terciary-rgb: 124, 167, 192;
  --color-quaternary: #a2bac7;
  --color-quaternary-rgb: 162, 186, 199;

  --surface-color-primary: var(--color-grey-200);
  --surface-color-primary-rgb: var(--color-grey-200-rgb);
  --surface-color-secondary: var(--color-quaternary);
  --surface-color-secondary-rgb: var(--color-quaternary-rgb);
  --surface-color-terciary: var(--color-terciary);
  --surface-color-terciary-rgb: var(--color-terciary-rgb);
  --surface-color-quaternary: var(--color-white);
  --surface-color-quaternary-rgb: var(--color-white-rgb);

  --surface-color-hover: rgba(var(--color-white-rgb), 0.15);

  --surface-color-primary-dark: var(--color-primary);
  --surface-color-primary-rgb-dark: var(--color-primary-rgb);
  --surface-color-secondary-dark: var(--color-secondary);
  --surface-color-secondary-rgb-dark: var(--color-secondary-rgb);
  --surface-color-terciary-dark: var(--color-terciary);
  --surface-color-terciary-rgb-dark: var(--color-terciary-rgb);
  --surface-color-quaternary-dark: var(--color-quaternary);
  --surface-color-quaternary-rgb-dark: var(--color-quaternary-rgb);

  --surface-color-hover-dark: rgba(var(--color-black-rgb), 0.15);

  --font-color-primary: var(--color-black);
  --font-color-primary-rgb: var(--color-black-rgb);
  --font-color-secondary: var(--color-grey-800);
  --font-color-secondary-rgb: var(--color-grey-800-rgb);

  --font-color-primary-dark: var(--color-white);
  --font-color-primary-rgb-dark: var(--color-white-rgb);
  --font-color-secondary-dark: var(--color-grey-300);
  --font-color-secondary-rgb-dark: var(--color-grey-300-rgb);

  --link-normal: var(--font-color-primary);
  --link-visited: var(--link-normal);
  --link-hover: var(--font-color-secondary);
  --link-active: var(--link-hover);

  /* --font-primary: "Aleo", sans-serif;
  --font-color-: "Nunito Sans", sans-serif; */

  /* =x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x Other
=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x */

  --header1-size: 48rem;
  --header1-spacing: calc(var(--header1-size) * 0.6);
  --header2-size: 40rem;
  --header2-spacing: calc(var(--header2-size) * 0.6);
  --header3-size: 34rem;
  --header3-spacing: calc(var(--header3-size) * 0.6);
  --header4-size: 30rem;
  --header4-spacing: calc(var(--header4-size) * 0.6);
  --paragraph-size: 22rem;
  --paragraph-spacing: calc(var(--paragraph-size) * 0.8);
  --paragraph-line-height: 150%;
  --list-item-size: var(--paragraph-size);
  --list-item-spacing: calc(var(--list-item-size) * 0.6);
  --list-item-line-height: 130%;

  --button-spacing: var(--header1-size);
  --main-padding: 50px 100px;

  --nav-left-width: 240px;
  --nav-padding: 6px 10px;
  --nav-li-padding: 6px 15px;
  --nav-border: solid 1px #777;
  --reg-text-margin-bottom: 10px;

  --content-max-width: 1000px;

  --transition-duration: 0.4s;

  scroll-behavior: smooth;
}

/* =x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x= */
/* x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x */

* {
  margin: 0;
  padding: 0;

  box-sizing: border-box;
  vertical-align: baseline;

  text-decoration: none;
}

html, body {
  overflow-y: auto;
  padding: 0 !important;
}

html {
  font-size: 6.25%;
}

body {
  min-height: 100vh;
  font-size: 24rem;
  /* color: rgb(var(--font-color-primary-rgb)); */

  /* background: linear-gradient(81deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.1) 30%, rgba(0, 0, 0, 0) 100%), rgb(var(--surface-color-primary-rgb)); */
  /*
  Com o gradient em ângulo, páginas com mais de 100vh ficavam com o bg diferente.
  Melhor seria fazê-lo começar de cima/esquerda – não funcionou com o background-position –, mas não consegui. 
  */
  /* background-attachment: fixed; */

  display: grid;
  align-content: start;
  grid-template-columns: minmax(40px, 1fr) minmax(min-content, 1000px) minmax(40px, 1fr);
}

@layer base {
  body {
    @apply bg-surface-primary dark:bg-surface-primaryDark text-text-primary dark:text-text-primaryDark;
  }
  nav {
    @apply max-w-content;
  }
  main {
    @apply block w-full pt-[95px] my-0 mx-auto col-start-2 col-end-3
  }

  h1 {
    @apply font-semibold text-header1 mb-header1
  }
  h2 {
    @apply font-semibold text-header2 mb-header2
  }
  .mb-h2 {
    @apply mb-header2
  }
  h3 {
    @apply font-medium text-header3 mb-header3
  }
  h3 {
    @apply font-medium text-header4 mb-header4
  }

  p {
    @apply font-normal text-paragraph     leading-paragraph
  }
  li {
    @apply font-normal text-listItem     leading-listItem     my-0 mx-4
  }
  a {
    @apply text-link-normal visited:text-link-visited hover:text-link-hover active:text-link-active transition-colors duration-longer
  }
}

p {
  line-height-step: 250%;

  &:not(:last-child) {
    margin-bottom: var(--paragraph-spacing);
  }
}

li {
  line-height-step: 250%;
}

/* =x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x= */
/* x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x */

.home-word-spacing {
  word-spacing: 0.4rem;
}

/* =x CSSTransform (react-transition-group)
=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x */

.containerOpacity-enter {
  opacity: 0;
}

.containerOpacity-enter-active {
  transition: opacity calc(var(--transition-duration) / 2);
  opacity: 1;
}

.containerOpacity-exit {
  opacity: 1;
}

.containerOpacity-exit-active {
  transition: opacity calc(var(--transition-duration) / 2);
  opacity: 0;
}

/* =x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x= */
/* x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x */
